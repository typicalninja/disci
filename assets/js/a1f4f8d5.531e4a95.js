"use strict";(self.webpackChunk_discijs_docs=self.webpackChunk_discijs_docs||[]).push([[110],{7522:(e,t,i)=>{i.d(t,{Zo:()=>s,kt:()=>f});var a=i(9901);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function n(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?n(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):n(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function p(e,t){if(null==e)return{};var i,a,r=function(e,t){if(null==e)return{};var i,a,r={},n=Object.keys(e);for(a=0;a<n.length;a++)i=n[a],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)i=n[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var o=a.createContext({}),c=function(e){var t=a.useContext(o),i=t;return e&&(i="function"==typeof e?e(t):l(l({},t),e)),i},s=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var i=e.components,r=e.mdxType,n=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=c(i),u=r,f=d["".concat(o,".").concat(u)]||d[u]||m[u]||n;return i?a.createElement(f,l(l({ref:t},s),{},{components:i})):a.createElement(f,l({ref:t},s))}));function f(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=i.length,l=new Array(n);l[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[d]="string"==typeof e?e:r,l[1]=p;for(var c=2;c<n;c++)l[c]=i[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,i)}u.displayName="MDXCreateElement"},7499:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>n,metadata:()=>p,toc:()=>c});var a=i(7364),r=(i(9901),i(7522));const n={id:"VerificationStratergy.NativeVerificationStratergy",title:"Class: NativeVerificationStratergy",sidebar_label:"VerificationStratergy.NativeVerificationStratergy",custom_edit_url:null},l=void 0,p={unversionedId:"api/classes/VerificationStratergy.NativeVerificationStratergy",id:"api/classes/VerificationStratergy.NativeVerificationStratergy",title:"Class: NativeVerificationStratergy",description:"VerificationStratergy.NativeVerificationStratergy",source:"@site/docs/api/classes/VerificationStratergy.NativeVerificationStratergy.md",sourceDirName:"api/classes",slug:"/api/classes/VerificationStratergy.NativeVerificationStratergy",permalink:"/docs/api/classes/VerificationStratergy.NativeVerificationStratergy",draft:!1,editUrl:null,tags:[],version:"current",lastUpdatedAt:1681210428,formattedLastUpdatedAt:"Apr 11, 2023",frontMatter:{id:"VerificationStratergy.NativeVerificationStratergy",title:"Class: NativeVerificationStratergy",sidebar_label:"VerificationStratergy.NativeVerificationStratergy",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"UserFlagsBitField",permalink:"/docs/api/classes/UserFlagsBitField"},next:{title:"VerificationStratergy.NoLimitVerificationStratergy",permalink:"/docs/api/classes/VerificationStratergy.NoLimitVerificationStratergy"}},o={},c=[{value:"Implements",id:"implements",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"_publicKey",id:"_publickey",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"cryptoAlgorithm",id:"cryptoalgorithm",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"publicKey",id:"publickey",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"Methods",id:"methods",level:2},{value:"generatePublicKey",id:"generatepublickey",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"verifyRequest",id:"verifyrequest",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Implementation of",id:"implementation-of",level:4},{value:"Defined in",id:"defined-in-6",level:4}],s={toc:c},d="wrapper";function m(e){let{components:t,...i}=e;return(0,r.kt)(d,(0,a.Z)({},s,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/namespaces/VerificationStratergy"},"VerificationStratergy"),".NativeVerificationStratergy"),(0,r.kt)("p",null,"A security stratergy that uses Native crypto to verify if request is incoming from discord"),(0,r.kt)("h2",{id:"implements"},"Implements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/api/interfaces/VerificationStratergy.verificationStratergy"},(0,r.kt)("inlineCode",{parentName:"a"},"verificationStratergy")))),(0,r.kt)("h2",{id:"constructors"},"Constructors"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"new NativeVerificationStratergy"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"publicKey?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"cryptoAlgorithm?"),")"),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"publicKey")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Public key from discord")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"cryptoAlgorithm")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"CryptoAlgorithms")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'"Ed25519"')),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/typicalninja493/disci/blob/1035cbc/packages/disci/src/verification.ts#L26"},"packages/disci/src/verification.ts:26")),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"_publickey"},"_","publicKey"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"_","publicKey"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"CryptoKey")," = ",(0,r.kt)("inlineCode",{parentName:"p"},"null")),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/typicalninja493/disci/blob/1035cbc/packages/disci/src/verification.ts#L21"},"packages/disci/src/verification.ts:21")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"cryptoalgorithm"},"cryptoAlgorithm"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"cryptoAlgorithm"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"CryptoAlgorithms")," = ",(0,r.kt)("inlineCode",{parentName:"p"},'"Ed25519"')),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/typicalninja493/disci/blob/1035cbc/packages/disci/src/verification.ts#L26"},"packages/disci/src/verification.ts:26")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"publickey"},"publicKey"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"publicKey"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Public key from discord"),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/typicalninja493/disci/blob/1035cbc/packages/disci/src/verification.ts#L26"},"packages/disci/src/verification.ts:26")),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"generatepublickey"},"generatePublicKey"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"generatePublicKey"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"returnPKey"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"CryptoKey"),">"),(0,r.kt)("p",null,"Generate a cryptokey for the public key provided in the options.\nRun this at startup if you want to pre create a publicKey before any interaction requests.\nIf not, on first interaction request this will be called."),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"returnPKey")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"true"))))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"CryptoKey"),">"),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/typicalninja493/disci/blob/1035cbc/packages/disci/src/verification.ts#L60"},"packages/disci/src/verification.ts:60")),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"generatePublicKey"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"returnPKey?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/VerificationStratergy.NativeVerificationStratergy"},(0,r.kt)("inlineCode",{parentName:"a"},"NativeVerificationStratergy")),">"),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"returnPKey?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"false"))))),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/VerificationStratergy.NativeVerificationStratergy"},(0,r.kt)("inlineCode",{parentName:"a"},"NativeVerificationStratergy")),">"),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/typicalninja493/disci/blob/1035cbc/packages/disci/src/verification.ts#L61"},"packages/disci/src/verification.ts:61")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"verifyrequest"},"verifyRequest"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"verifyRequest"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"req"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"boolean"),">"),(0,r.kt)("p",null,"Used to validate if a request originated from discord\n",(0,r.kt)("a",{parentName:"p",href:"https://discord.com/developers/docs/interactions/receiving-and-responding#security-and-authorization"},"https://discord.com/developers/docs/interactions/receiving-and-responding#security-and-authorization")),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"req")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/interfaces/IRequest"},(0,r.kt)("inlineCode",{parentName:"a"},"IRequest")))))),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"boolean"),">"),(0,r.kt)("h4",{id:"implementation-of"},"Implementation of"),(0,r.kt)("p",null,"verificationStratergy.verifyRequest"),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/typicalninja493/disci/blob/1035cbc/packages/disci/src/verification.ts#L33"},"packages/disci/src/verification.ts:33")))}m.isMDXComponent=!0}}]);